crystal_doc_search_index_callback({"repository_name":"pdf","body":"# pdf.cr \r\n> PDF for Crystal\r\nforked from [marceloboeira]https://github.com/marceloboeira/pdf.cr\r\n\r\nthis lib provides generation and (todo) analysis of pdf documents\r\n\r\nSome of the document is written in Chinese, and they will later be replaced with texts from the standard\r\n\r\nWe 'll first support PDF-1.3\r\n## Installation\r\n\r\nAdd this to your application's `shard.yml`:\r\n\r\n```yaml\r\ndependencies:\r\n  pdf:\r\n    github: homodeluna/pdf.cr\r\n```\r\n\r\n## Contributing\r\n\r\n1. Fork it (https://github.com/homodeluna/pdf.cr/fork)\r\n2. Create your feature branch (git checkout -b my-new-feature)\r\n3. Commit your changes (git commit -am 'Add some feature')\r\n4. Push to the branch (git push origin my-new-feature)\r\n5. Create a new Pull Request\r\n","program":{"html_id":"pdf/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"pdf","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"pdf/PDF","path":"PDF.html","kind":"module","full_name":"PDF","name":"PDF","abstract":false,"locations":[{"filename":"src\\pdf.cr","line_number":4,"url":null},{"filename":"src\\pdf\\document\\crossref.cr","line_number":1,"url":null},{"filename":"src\\pdf\\document\\document.cr","line_number":2,"url":null},{"filename":"src\\pdf\\document\\header.cr","line_number":1,"url":null},{"filename":"src\\pdf\\document\\trailer.cr","line_number":1,"url":null},{"filename":"src\\pdf\\obj\\name.cr","line_number":1,"url":null},{"filename":"src\\pdf\\obj\\obj.cr","line_number":3,"url":null},{"filename":"src\\pdf\\obj\\ref.cr","line_number":1,"url":null},{"filename":"src\\pdf\\obj\\stream.cr","line_number":2,"url":null},{"filename":"src\\pdf\\version.cr","line_number":1,"url":null}],"repository_name":"pdf","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.0.0\""}],"doc":"In the whole module, we prefer simplicity than performance\r","summary":"<p>In the whole module, we prefer simplicity than performance</p>","types":[{"html_id":"pdf/PDF/Document","path":"PDF/Document.html","kind":"class","full_name":"PDF::Document","name":"Document","abstract":false,"superclass":{"html_id":"pdf/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"pdf/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"pdf/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src\\pdf\\document\\crossref.cr","line_number":2,"url":null},{"filename":"src\\pdf\\document\\document.cr","line_number":18,"url":null},{"filename":"src\\pdf\\document\\header.cr","line_number":2,"url":null},{"filename":"src\\pdf\\document\\trailer.cr","line_number":2,"url":null}],"repository_name":"pdf","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"pdf/PDF","kind":"module","full_name":"PDF","name":"PDF"},"doc":"最小的PDF文档必须包含许多基本部分：\r\n\r\n- trailer字典，提供有关如何阅读其余内容的信息文件中的对象\r\n- 文档目录，它是对象图的根。\r\n- 页面树，它枚举文档中的页面。\r\n- 至少有一页。每个页面必须具有：\r\n- - resources(资源)，包括例如字体。\r\n- - 其页面内容，其中包含绘制文本和图形的说明在页面上。\r\n\r\n另一种说法是:一个简单有效的PDF文件按顺序包含四个部分:\r\n\r\n- header，提供PDF版本号\r\n- body 包含页面，图形内容和大部分辅助信息的主体，全部编码为一系列对象。\r\n- 交叉引用表，列出文件中每个对象的位置便于随机访问。\r\n- trailer包括trailer字典，它有助于找到文件的每个部分， 并列出可以在不处理整个文件的情况下读取的各种元数据。\r","summary":"<p>最小的PDF文档必须包含许多基本部分：\r \r - trailer字典，提供有关如何阅读其余内容的信息文件中的对象\r - 文档目录，它是对象图的根。\r - 页面树，它枚举文档中的页面。\r - 至少有一页。每个页面必须具有：\r - - resources(资源)，包括例如字体。\r - - 其页面内容，其中包含绘制文本和图形的说明在页面上。\r \r 另一种说法是:一个简单有效的PDF文件按顺序包含四个部分:\r \r - header，提供PDF版本号\r - body 包含页面，图形内容和大部分辅助信息的主体，全部编码为一系列对象。\r - 交叉引用表，列出文件中每个对象的位置便于随机访问。\r - trailer包括trailer字典，它有助于找到文件的每个部分， 并列出可以在不处理整个文件的情况下读取的各种元数据。</p>","constructors":[{"html_id":"new(header:PDF::Document::Header,boty,crossrefs:Int32,trailers:Int32)-class-method","name":"new","abstract":false,"args":[{"name":"header","external_name":"header","restriction":"::PDF::Document::Header"},{"name":"boty","external_name":"boty","restriction":""},{"name":"crossrefs","external_name":"crossrefs","restriction":"::Int32"},{"name":"trailers","external_name":"trailers","restriction":"::Int32"}],"args_string":"(header : PDF::Document::Header, boty, crossrefs : Int32, trailers : Int32)","args_html":"(header : <a href=\"../PDF/Document/Header.html\">PDF::Document::Header</a>, boty, crossrefs : Int32, trailers : Int32)","location":{"filename":"src\\pdf\\document\\document.cr","line_number":27,"url":null},"def":{"name":"new","args":[{"name":"header","external_name":"header","restriction":"::PDF::Document::Header"},{"name":"boty","external_name":"boty","restriction":""},{"name":"crossrefs","external_name":"crossrefs","restriction":"::Int32"},{"name":"trailers","external_name":"trailers","restriction":"::Int32"}],"visibility":"Public","body":"_ = allocate\n_.initialize(header, boty, crossrefs, trailers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"render(io:IO)-instance-method","name":"render","doc":"将PDF文档写入文件中的一系列字节要比阅读它简单得多， 我们不需要支持所有PDF格式，只需要支持我们打算使用的子集。写作 PDF文件非常快，因为它只是将对象图展平为一系列字节。\r\n\r\n- 输出header。\r\n- 删除PDF中任何其他对象未引用的任何对象。这个避免编写不再需要的对象。\r\n- 重新编号对象，使它们从1到n运行，其中n是对象的数量文件。\r\n- 逐个输出对象，从对象编号1开始，记录字节交叉引用表的每个偏移量。\r\n- 编写交叉引用表。\r\n- 编写trailer，trailer字典和文件结束标记\r","summary":"<p>将PDF文档写入文件中的一系列字节要比阅读它简单得多， 我们不需要支持所有PDF格式，只需要支持我们打算使用的子集。写作 PDF文件非常快，因为它只是将对象图展平为一系列字节。\r \r - 输出header。\r - 删除PDF中任何其他对象未引用的任何对象。这个避免编写不再需要的对象。\r - 重新编号对象，使它们从1到n运行，其中n是对象的数量文件。\r - 逐个输出对象，从对象编号1开始，记录字节交叉引用表的每个偏移量。\r - 编写交叉引用表。\r - 编写trailer，trailer字典和文件结束标记</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src\\pdf\\document\\document.cr","line_number":38,"url":null},"def":{"name":"render","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"@header.render(io)\nio << \"%%EOF\"\n"}}],"types":[{"html_id":"pdf/PDF/Document/CrossRef","path":"PDF/Document/CrossRef.html","kind":"class","full_name":"PDF::Document::CrossRef","name":"CrossRef","abstract":false,"superclass":{"html_id":"pdf/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"pdf/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"pdf/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src\\pdf\\document\\crossref.cr","line_number":18,"url":null}],"repository_name":"pdf","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"pdf/PDF/Document","kind":"class","full_name":"PDF::Document","name":"Document"},"doc":"交叉引用表列出了文件正文中每个对象的字节偏移量。 这允许随机访问对象，因此不必按顺序读取它们和对象 永远不会阅读从未使用过的。这尤其意味着，即使在大型文件上， 像计算PDF文档中的页数这样的简单操作也可以很快。\r\n\r\nPDF文件中的每个对象都有一个对象编号和一个世代编号。 当重用交叉引用表条目时使用世代号 - 我们在这里不考虑它们（它们将始终为零）。\r\n\r\n出于我们的目的，我们可以认为交叉引用表由一个表示条目数的标题行组成， 然后是一个特殊条目，然后是文件体中每个对象的一行。在我们的文件中：\r\n```plaintext\r\n0 6 表中的六个条目，从0开始\r\n0000000000 65535 f 特别条目\r\n0000000015 00000 n 对象1的字节偏移量为15\r\n0000000074 00000 n 对象2的字节偏移量为74\r\n0000000192 00000 n 等等...\r\n0000000291 00000 n\r\n0000000409 00000 n 对象5的字节偏移量为409\r\n```\r\n请注意，字节偏移量以前导零存储，以确保每个条目都相同 长度。因此，我们也可以通过随机访问来读取交叉引用表。\r","summary":"<p>交叉引用表列出了文件正文中每个对象的字节偏移量。 这允许随机访问对象，因此不必按顺序读取它们和对象 永远不会阅读从未使用过的。这尤其意味着，即使在大型文件上， 像计算PDF文档中的页数这样的简单操作也可以很快。\r \r PDF文件中的每个对象都有一个对象编号和一个世代编号。 当重用交叉引用表条目时使用世代号 - 我们在这里不考虑它们（它们将始终为零）。\r \r 出于我们的目的，我们可以认为交叉引用表由一个表示条目数的标题行组成， 然后是一个特殊条目，然后是文件体中每个对象的一行。在我们的文件中：\r ```plaintext\r 0 6 表中的六个条目，从0开始\r 0000000000 65535 f 特别条目\r 0000000015 00000 n 对象1的字节偏移量为15\r 0000000074 00000 n 对象2的字节偏移量为74\r 0000000192 00000 n 等等...</p>"},{"html_id":"pdf/PDF/Document/Header","path":"PDF/Document/Header.html","kind":"class","full_name":"PDF::Document::Header","name":"Header","abstract":false,"superclass":{"html_id":"pdf/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"pdf/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"pdf/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src\\pdf\\document\\header.cr","line_number":18,"url":null}],"repository_name":"pdf","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"MAGIC","name":"MAGIC","value":"\"%âãÏÓ\"","doc":"把一些不可打印的字符添加到PDF标题中 - 这可确保文件被识别为二进制 （而不是文本），例如，通过FTP等文件传输程序。\r","summary":"<p>把一些不可打印的字符添加到PDF标题中 - 这可确保文件被识别为二进制 （而不是文本），例如，通过FTP等文件传输程序。</p>"}],"namespace":{"html_id":"pdf/PDF/Document","kind":"class","full_name":"PDF::Document","name":"Document"},"doc":"PDF文件的第一行给出文档的版本号。在我们的示例中，是：\r\n```plaintext\r\n%PDF-1.0\r\n```\r\n这将文件定义为PDF版本1.0。PDF是向后兼容的，因此PDF 1.3文档 应该由知道例如PDF 1.5的程序读取。它在很大程度上也是向前兼容的， 因此大多数PDF程序都会尝试读取任何文件，无论假设的版本号是什么。\r\n\r\n由于PDF文件几乎总是包含二进制数据，因此如果更改行结尾 （例如，如果文件通过FTP以文本模式传输），它们可能会损坏。 为了允许传统文件传输程序确定文件是二进制文件， 通常在标头中包含一些字符代码高于127的字节。例如：\r\n```plaintext\r\n%âãÏÓ\r\n```\r\n百分号表示另一个标题行，其他几个字节是超过127的任意字符代码。 因此，我们示例中的整个header是：\r\n```plaintext\r\n%PDF-1.0\r\n%âãÏÓ\r\n```\r","summary":"<p>PDF文件的第一行给出文档的版本号。在我们的示例中，是：\r <code>plaintext %<a href=\"../../PDF.html\">PDF</a>-1.0</code>\r 这将文件定义为PDF版本1.0。PDF是向后兼容的，因此PDF 1.3文档 应该由知道例如PDF 1.5的程序读取。它在很大程度上也是向前兼容的， 因此大多数PDF程序都会尝试读取任何文件，无论假设的版本号是什么。\r \r 由于PDF文件几乎总是包含二进制数据，因此如果更改行结尾 （例如，如果文件通过FTP以文本模式传输），它们可能会损坏。 为了允许传统文件传输程序确定文件是二进制文件， 通常在标头中包含一些字符代码高于127的字节。例如：\r <code>plaintext %âãÏÓ</code>\r 百分号表示另一个标题行，其他几个字节是超过127的任意字符代码。 因此，我们示例中的整个header是：\r <code>plaintext %<a href=\"../../PDF.html\">PDF</a>-1.0 %âãÏÓ</code></p>","instance_methods":[{"html_id":"render(io:IO)-instance-method","name":"render","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src\\pdf\\document\\header.cr","line_number":23,"url":null},"def":{"name":"render","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"((io << \"%PDF-\") << @version) << \"\\n%âãÏÓ\\n\""}}]},{"html_id":"pdf/PDF/Document/Trailer","path":"PDF/Document/Trailer.html","kind":"class","full_name":"PDF::Document::Trailer","name":"Trailer","abstract":false,"superclass":{"html_id":"pdf/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"pdf/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"pdf/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src\\pdf\\document\\trailer.cr","line_number":19,"url":null}],"repository_name":"pdf","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"pdf/PDF/Document","kind":"class","full_name":"PDF::Document","name":"Document"},"doc":"Trailer的第一行只是Trailer关键字。之后是Trailer 字典，至少包含/Size 条目（给出条目数在交叉引用表中）和 /Root条目（它给出了对象编号）文档目录，它是正文中对象图的根元素。\r\n\r\n接下来是一行只包含startxref关键字， 一行包含一个数字（文件中交叉引用表开头的字节偏移量）， 然后是行%%EOF，它表示PDF文件的结尾。\r\n\r\n这是示例3-1中的Trailer：\r\n```plaintext\r\ntrailer         文件尾关键字\r\n<< 文件尾字典\r\n/Root 5 0 R\r\n/Size 6\r\n>>\r\nstartxref       startxref 文件尾关键字\r\n459 交叉引用表的字节偏移量\r\n%%EOF 文件结束标记\r\n```\r\n从文件末尾向后读取Trailer：找到文件结束标记， 提取交叉引用表的字节偏移量，然后解析Trailer字典。 Trailer关键字标记Trailer的上限。\r","summary":"<p>Trailer的第一行只是Trailer关键字。之后是Trailer 字典，至少包含/Size 条目（给出条目数在交叉引用表中）和 /Root条目（它给出了对象编号）文档目录，它是正文中对象图的根元素。\r \r 接下来是一行只包含startxref关键字， 一行包含一个数字（文件中交叉引用表开头的字节偏移量）， 然后是行%%EOF，它表示PDF文件的结尾。\r \r 这是示例3-1中的Trailer：\r <code>plaintext trailer 文件尾关键字 &lt;&lt; 文件尾字典 /Root 5 0 R /Size 6 &gt;&gt; startxref startxref 文件尾关键字 459 交叉引用表的字节偏移量 %%EOF 文件结束标记</code>\r 从文件末尾向后读取Trailer：找到文件结束标记， 提取交叉引用表的字节偏移量，然后解析Trailer字典。 Trailer关键字标记Trailer的上限。</p>"}]},{"html_id":"pdf/PDF/Name","path":"PDF/Name.html","kind":"class","full_name":"PDF::Name","name":"Name","abstract":false,"superclass":{"html_id":"pdf/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"pdf/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"pdf/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src\\pdf\\obj\\name.cr","line_number":3,"url":null},{"filename":"src\\pdf\\obj\\obj.cr","line_number":5,"url":null}],"repository_name":"pdf","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"pdf/PDF","kind":"module","full_name":"PDF","name":"PDF"},"class_methods":[{"html_id":"format(str:String):String-class-method","name":"format","doc":"This syntax is required in order to represent any of the delimiter or white-space characters or the number sign character itself; \r\nit is recommended but not required for\r\ncharacters whose codes are outside the range 33 (!) to 126 (~)\r","summary":"<p>This syntax is required in order to represent any of the delimiter or white-space characters or the number sign character itself; \r it is recommended but not required for\r characters whose codes are outside the range 33 (!) to 126 (~)</p>","abstract":false,"args":[{"name":"str","external_name":"str","restriction":"String"}],"args_string":"(str : String) : String","args_html":"(str : String) : String","location":{"filename":"src\\pdf\\obj\\name.cr","line_number":11,"url":null},"def":{"name":"format","args":[{"name":"str","external_name":"str","restriction":"String"}],"return_type":"String","visibility":"Public","body":"String.build do |builder|\n  str.each_char do |c|\n    case c.ord\n    when 35\n      (builder << '#') << (c.ord.to_s(16))\n    when [33..126]\n      builder << c\n    when [256..-1]\n      raise(\"non ascii char #{c} in #{str.inspect}are not premitted in names\")\n    else\n      (builder << '#') << (c.ord.to_s(16))\n    end\n  end\nend"}}],"constructors":[{"html_id":"new(value:String)-class-method","name":"new","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"::String"}],"args_string":"(value : String)","args_html":"(value : String)","location":{"filename":"src\\pdf\\obj\\obj.cr","line_number":7,"url":null},"def":{"name":"new","args":[{"name":"value","external_name":"value","restriction":"::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"inner:String-instance-method","name":"inner","abstract":false,"location":{"filename":"src\\pdf\\obj\\name.cr","line_number":5,"url":null},"def":{"name":"inner","visibility":"Public","body":"@inner"}},{"html_id":"inner=(inner:String)-instance-method","name":"inner=","abstract":false,"args":[{"name":"inner","external_name":"inner","restriction":"::String"}],"args_string":"(inner : String)","args_html":"(inner : String)","location":{"filename":"src\\pdf\\obj\\name.cr","line_number":5,"url":null},"def":{"name":"inner=","args":[{"name":"inner","external_name":"inner","restriction":"::String"}],"visibility":"Public","body":"@inner = inner"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"This syntax is required in order to represent any of the delimiter or white-space characters or the number sign character itself; \r\nit is recommended but not required for\r\ncharacters whose codes are outside the range 33 (!) to 126 (~)\r","summary":"<p>This syntax is required in order to represent any of the delimiter or white-space characters or the number sign character itself; \r it is recommended but not required for\r characters whose codes are outside the range 33 (!) to 126 (~)</p>","abstract":false,"location":{"filename":"src\\pdf\\obj\\name.cr","line_number":28,"url":null},"def":{"name":"to_s","visibility":"Public","body":"Name.format(str)"}}]},{"html_id":"pdf/PDF/ObjType","path":"PDF/ObjType.html","kind":"alias","full_name":"PDF::ObjType","name":"ObjType","abstract":false,"locations":[{"filename":"src\\pdf\\obj\\obj.cr","line_number":11,"url":null}],"repository_name":"pdf","program":false,"enum":false,"alias":true,"aliased":"(Array(PDF::ObjType) | Bool | Float64 | Hash(String, PDF::ObjType) | Int64 | PDF::Name | PDF::Ref | PDF::Stream | String | Nil)","aliased_html":"Array(<a href=\"../PDF/ObjType.html\">PDF::ObjType</a>) | Bool | Float64 | Hash(String, <a href=\"../PDF/ObjType.html\">PDF::ObjType</a>) | Int64 | <a href=\"../PDF/Name.html\">PDF::Name</a> | <a href=\"../PDF/Ref.html\">PDF::Ref</a> | <a href=\"../PDF/Stream.html\">PDF::Stream</a> | String | Nil","const":false,"namespace":{"html_id":"pdf/PDF","kind":"module","full_name":"PDF","name":"PDF"}},{"html_id":"pdf/PDF/PdfObj","path":"PDF/PdfObj.html","kind":"class","full_name":"PDF::PdfObj","name":"PdfObj","abstract":false,"superclass":{"html_id":"pdf/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"pdf/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"pdf/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src\\pdf\\obj\\obj.cr","line_number":23,"url":null}],"repository_name":"pdf","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"pdf/PDF","kind":"module","full_name":"PDF","name":"PDF"},"doc":"PDF supports eight basic types of object,five atoms and three comprehensives: \r\n- Boolean values\r\n- Integer and real numbers\r\n- Strings\r\n- Names\r\n- Arrays\r\n- Dictionaries\r\n- Streams\r\n- The null object (represented as nil in crystal)\r","summary":"<p>PDF supports eight basic types of object,five atoms and three comprehensives: \r - Boolean values\r - Integer and real numbers\r - Strings\r - Names\r - Arrays\r - Dictionaries\r - Streams\r - The null object (represented as nil in crystal)</p>","class_methods":[{"html_id":"raw_output(obj:ObjType,io)-class-method","name":"raw_output","abstract":false,"args":[{"name":"obj","external_name":"obj","restriction":"ObjType"},{"name":"io","external_name":"io","restriction":""}],"args_string":"(obj : ObjType, io)","args_html":"(obj : <a href=\"../PDF/ObjType.html\">ObjType</a>, io)","location":{"filename":"src\\pdf\\obj\\obj.cr","line_number":28,"url":null},"def":{"name":"raw_output","args":[{"name":"obj","external_name":"obj","restriction":"ObjType"},{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":"case obj\nwhen Int64, Float64, Bool\n  io << obj\nwhen String\n  io << '<'\n  obj.each_codepoint do |cp|\n    (cp & 255).to_s(io, base: 16, precision: 2)\n  end\n  io << '>'\nwhen Name, Ref\n  io << obj.to_s\nwhen Nil\n  io << \"null\"\nwhen Array(ObjType)\n  io << \"[\"\n  obj.map do |o|\n    String.build do |builder|\n      self.raw_output(v, builder)\n    end\n  end.join(io, ' ')\n  io << \"]\"\nwhen Hash(String, ObjType)\n  io << \"<<\"\n  obj.map do |k, v|\n    \"#{Name.format(k)} #{String.build do |builder|\n      self.raw_output(v, builder)\n    end}\"\n  end.join(io, ' ')\n  io << \">>\"\nwhen Stream\n  obj.raw_output(io)\nend"}}],"instance_methods":[{"html_id":"output(io)-instance-method","name":"output","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src\\pdf\\obj\\obj.cr","line_number":52,"url":null},"def":{"name":"output","args":[{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":""}}]},{"html_id":"pdf/PDF/Ref","path":"PDF/Ref.html","kind":"struct","full_name":"PDF::Ref","name":"Ref","abstract":false,"superclass":{"html_id":"pdf/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"pdf/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"pdf/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"pdf/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src\\pdf\\obj\\ref.cr","line_number":2,"url":null}],"repository_name":"pdf","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"pdf/PDF","kind":"module","full_name":"PDF","name":"PDF"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src\\pdf\\obj\\ref.cr","line_number":2,"url":null},"def":{"name":"new","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"html_id":"initialize-instance-method","name":"initialize","abstract":false,"location":{"filename":"src\\pdf\\obj\\ref.cr","line_number":2,"url":null},"def":{"name":"initialize","visibility":"Public","body":""}},{"html_id":"initizlize(target:Int32,version:Int32=0)-instance-method","name":"initizlize","abstract":false,"args":[{"name":"target","external_name":"target","restriction":"::Int32"},{"name":"version","default_value":"0","external_name":"version","restriction":"::Int32"}],"args_string":"(target : Int32, version : Int32 = 0)","args_html":"(target : Int32, version : Int32 = <span class=\"n\">0</span>)","location":{"filename":"src\\pdf\\obj\\ref.cr","line_number":5,"url":null},"def":{"name":"initizlize","args":[{"name":"target","external_name":"target","restriction":"::Int32"},{"name":"version","default_value":"0","external_name":"version","restriction":"::Int32"}],"visibility":"Public","body":"@target = target\n@version = version\n"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a string representation of this object.\n\nDescendants must usually **not** override this method. Instead,\nthey must override `to_s(io)`, which must append to the given\nIO object.","summary":"<p>Returns a string representation of this object.</p>","abstract":false,"location":{"filename":"src\\pdf\\obj\\ref.cr","line_number":7,"url":null},"def":{"name":"to_s","visibility":"Public","body":"\"#{@target} #{@version} R\""}}]},{"html_id":"pdf/PDF/Stream","path":"PDF/Stream.html","kind":"class","full_name":"PDF::Stream","name":"Stream","abstract":false,"superclass":{"html_id":"pdf/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"pdf/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"pdf/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src\\pdf\\obj\\stream.cr","line_number":13,"url":null}],"repository_name":"pdf","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"pdf/PDF","kind":"module","full_name":"PDF","name":"PDF"},"doc":"A stream object, like a string object, is a sequence of bytes. \r\nHowever, a PDF application can read a stream incrementally, while a string must be read in its entirety.\r\n\r\nFurthermore, a stream can be of unlimited length, whereas a string is subject to\r\nan implementation limit. For this reason, objects with potentially large amounts\r\nof data, such as images and page descriptions, are represented as streams. \r\n\r\n*Note*: As with strings, this section describes only the syntax for writing a stream as a\r\nsequence of bytes. What those bytes represent is determined by the context in which\r\nthe stream is referenced.\r","summary":"<p>A stream object, like a string object, is a sequence of bytes.</p>","constructors":[{"html_id":"new(dict:Hash(String,PDF::PdfObj),bytes:Array(UInt8))-class-method","name":"new","doc":"dict中不必指明字节数,因为计算时可以推出来\r","summary":"<p>dict中不必指明字节数,因为计算时可以推出来</p>","abstract":false,"args":[{"name":"dict","external_name":"dict","restriction":"::Hash(::String, ::PDF::PdfObj)"},{"name":"bytes","external_name":"bytes","restriction":"::Array(::UInt8)"}],"args_string":"(dict : Hash(String, PDF::PdfObj), bytes : Array(UInt8))","args_html":"(dict : Hash(String, <a href=\"../PDF/PdfObj.html\">PDF::PdfObj</a>), bytes : Array(UInt8))","location":{"filename":"src\\pdf\\obj\\stream.cr","line_number":58,"url":null},"def":{"name":"new","args":[{"name":"dict","external_name":"dict","restriction":"::Hash(::String, ::PDF::PdfObj)"},{"name":"bytes","external_name":"bytes","restriction":"::Array(::UInt8)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(dict, bytes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"decode_params:Array(PDF::PdfObj)|Hash(String,PDF::PdfObj)|Nil-instance-method","name":"decode_params","abstract":false,"location":{"filename":"src\\pdf\\obj\\stream.cr","line_number":40,"url":null},"def":{"name":"decode_params","visibility":"Public","body":"@decode_params"}},{"html_id":"decode_params=(decode_params:Array(PDF::PdfObj)|Hash(String,PDF::PdfObj)|Nil)-instance-method","name":"decode_params=","abstract":false,"args":[{"name":"decode_params","external_name":"decode_params","restriction":"::Array(::PDF::PdfObj) | ::Hash(::String, ::PDF::PdfObj) | ::Nil"}],"args_string":"(decode_params : Array(PDF::PdfObj) | Hash(String, PDF::PdfObj) | Nil)","args_html":"(decode_params : Array(<a href=\"../PDF/PdfObj.html\">PDF::PdfObj</a>) | Hash(String, <a href=\"../PDF/PdfObj.html\">PDF::PdfObj</a>) | Nil)","location":{"filename":"src\\pdf\\obj\\stream.cr","line_number":40,"url":null},"def":{"name":"decode_params=","args":[{"name":"decode_params","external_name":"decode_params","restriction":"::Array(::PDF::PdfObj) | ::Hash(::String, ::PDF::PdfObj) | ::Nil"}],"visibility":"Public","body":"@decode_params = decode_params"}},{"html_id":"filter:Array(PDF::Name)|PDF::Name|Nil-instance-method","name":"filter","abstract":false,"location":{"filename":"src\\pdf\\obj\\stream.cr","line_number":40,"url":null},"def":{"name":"filter","visibility":"Public","body":"@filter"}},{"html_id":"filter=(filter:Array(PDF::Name)|PDF::Name|Nil)-instance-method","name":"filter=","abstract":false,"args":[{"name":"filter","external_name":"filter","restriction":"::Array(::PDF::Name) | ::PDF::Name | ::Nil"}],"args_string":"(filter : Array(PDF::Name) | PDF::Name | Nil)","args_html":"(filter : Array(<a href=\"../PDF/Name.html\">PDF::Name</a>) | <a href=\"../PDF/Name.html\">PDF::Name</a> | Nil)","location":{"filename":"src\\pdf\\obj\\stream.cr","line_number":40,"url":null},"def":{"name":"filter=","args":[{"name":"filter","external_name":"filter","restriction":"::Array(::PDF::Name) | ::PDF::Name | ::Nil"}],"visibility":"Public","body":"@filter = filter"}},{"html_id":"length-instance-method","name":"length","doc":"The number of bytes from the beginning of the line following the keyword stream to the last byte just before the keyword\r\nendstream. (There may be an additional EOL marker, preceding endstream, that is not included in the count and is not logically part of\r\nthe stream data.) \r","summary":"<p>The number of bytes from the beginning of the line following the keyword stream to the last byte just before the keyword\r endstream.</p>","abstract":false,"location":{"filename":"src\\pdf\\obj\\stream.cr","line_number":19,"url":null},"def":{"name":"length","visibility":"Public","body":"@bytes.size"}},{"html_id":"raw_output(io:IO)-instance-method","name":"raw_output","doc":"print keyword and boty bytes\r\nTODO:add filter and cryptor\r","summary":"<p>print keyword and boty bytes\r TODO:add filter and cryptor</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src\\pdf\\obj\\stream.cr","line_number":63,"url":null},"def":{"name":"raw_output","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"io << \"stream\\n\"\nio << \"\\nendstream\\n\"\n"}}]}]}]}})